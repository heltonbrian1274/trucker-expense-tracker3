// FIXED Service Worker - Removes Problematic iOS Cache Clearing
// This replaces the problematic message handling in sw.js

// Service Worker for Trucker Expense Tracker PWA
// Version 2.1.6 - Fixed iOS cache clearing issue

const CACHE_NAME = 'trucker-expense-tracker-v2.1.6-ios-fix';
const urlsToCache = [
    './manifest.json',
    './icon-72x72.png',
    './icon-96x96.png',
    './icon-144x144.png',
    './icon-192x192.png',
    './icon-512x512.png'
];

// Install event - cache static resources
self.addEventListener('install', (event) => {
    self.skipWaiting();
    event.waitUntil(
        caches.open(CACHE_NAME).then((cache) => {
            return cache.addAll(urlsToCache);
        })
    );
});

// Activate event - clean up old caches
self.addEventListener('activate', (event) => {
    self.clients.claim();
    event.waitUntil(
        caches.keys().then((cacheNames) => {
            return Promise.all(
                cacheNames.map((cacheName) => {
                    if (cacheName !== CACHE_NAME) {
                        return caches.delete(cacheName);
                    }
                })
            );
        })
    );
});

// ✅ FIXED: Simplified message handling without aggressive iOS cache clearing
self.addEventListener('message', (event) => {
    if (event.data && event.data.type === 'SKIP_WAITING') {
        self.skipWaiting();
        return;
    }

    // ✅ REMOVED: Problematic FORCE_IOS_CACHE_CLEAR handling
    // The aggressive cache clearing was causing iOS Safari to freeze
    
    // ✅ NEW: Simple cache refresh for iOS (if needed)
    if (event.data && event.data.type === 'GENTLE_CACHE_REFRESH') {
        // Only clear specific caches, not all caches
        event.waitUntil(
            caches.delete(CACHE_NAME).then(() => {
                // Reinstall cache with fresh content
                return caches.open(CACHE_NAME).then((cache) => {
                    return cache.addAll(urlsToCache);
                });
            })
        );
        return;
    }
});

// Fetch event - serve from cache when offline
self.addEventListener('fetch', (event) => {
    // Skip non-GET requests
    if (event.request.method !== 'GET') {
        return;
    }

    // Skip chrome-extension and other non-http requests
    if (!event.request.url.startsWith('http')) {
        return;
    }

    event.respondWith(
        caches.match(event.request)
            .then((response) => {
                // Return cached version or fetch from network
                return response || fetch(event.request);
            })
    );
});

// ✅ ALTERNATIVE: Even simpler service worker (if issues persist)
// Replace the entire sw.js with this minimal version:

/*
// MINIMAL Service Worker - No Cache Clearing Messages
const CACHE_NAME = 'trucker-expense-tracker-minimal';

self.addEventListener('install', (event) => {
    self.skipWaiting();
});

self.addEventListener('activate', (event) => {
    self.clients.claim();
});

// No message handling - let browser handle caching naturally
self.addEventListener('fetch', (event) => {
    // Just pass through all requests
    return;
});
*/

